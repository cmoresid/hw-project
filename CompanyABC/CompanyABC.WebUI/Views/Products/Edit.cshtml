@model CompanyABC.Domain.Entities.Product

<div class="container">

<h1>@Html.Raw(ViewBag.Title)</h1>

@using (Html.BeginForm("Edit", "Products", FormMethod.Post, new { @class = "form-horizontal" }))
{
    @* Hidden Fields *@
    <div>
        @Html.HiddenFor(m => m.ABCID)
        @Html.HiddenFor(m => m.DateCreated)
    </div>

    <div class="control-group">
        <label class="control-label" for="Title">Title</label>
        <div class="controls">
            @Html.TextBoxFor(m => m.Title)
            @Html.ValidationMessage("Title", null, new { @class = "help-inline" })
        </div>
    </div>
    
    <div class="control-group">
        <label class="control-label" for="Description">Description</label>
        <div class="controls">
            @Html.TextAreaFor(m => m.Description)
            @Html.ValidationMessage("Description", null, new { @class = "help-inline" })
        </div>
    </div>
    
    <div class="control-group">
        <label class="control-label" for="Vendor">Vendor</label>
        <div class="controls">
            @Html.TextBoxFor(m => m.Vendor)
            @Html.ValidationMessage("Vendor", null, new { @class = "help-inline" })
        </div>
    </div>
    
    <div class="control-group">
        <label class="control-label" for="Cost">Cost</label>
        <div class="controls">
            @Html.TextBoxFor(m => m.Cost)
            @Html.ValidationMessage("Cost", null, new { @class = "help-inline" })
        </div>
    </div>
    
    <div class="control-group">
        <label class="control-label" for="ListPrice">List Price</label>
        <div class="controls">
            @Html.TextBoxFor(m => m.ListPrice)
            @Html.ValidationMessage("ListPrice", null, new { @class = "help-inline" })
        </div>
    </div>
    
    <div class="control-group">
        <label class="control-label" for="Status">Status</label>
        <div class="controls">
            @* Really should have a custom HTML Helper to handle this... *@
            @Html.DropDownListFor(m => m.Status, new List<SelectListItem>() 
            { 
                new SelectListItem() { Text = "In Stock", Value = "In Stock" },
                new SelectListItem() { Text = "Out Of Stock", Value = "Out Of Stock" },
                new SelectListItem() { Text = "On The Way", Value = "On The Way" }
            })
        </div>
    </div>

    <div class="control-group">
        <label class="control-label" for="Location">Location</label>
        <div class="controls">
            @Html.TextBoxFor(m => m.Location)
            @Html.ValidationMessage("Location", null, new { @class = "help-inline" })
        </div>
    </div>

    <div class="control-group">
        <label class="control-label" for="DateReceived">Date Received</label>
        <div class="controls">
            @Html.TextBoxFor(m => m.DateReceived)
            @Html.ValidationMessage("DateReceived", null, new { @class = "help-inline" })
        </div>
    </div>

    <div class="control-group">
        <div class="controls">
            <input class="buttonred" type="submit" value="Save" />
            <a href="@Url.Action("List")" class="buttonred" >Cancel</a>
        </div>
    </div>
}

</div>

@section scripts
{
    <script type="text/javascript" src="~/Scripts/jquery-ui-1.8.20.min.js"></script>
    <script type="text/javascript" src="~/Scripts/jquery.validate.min.js"></script>
    <script type="text/javascript" src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script type="text/javascript" src="~/Scripts/Products/EditProduct.js"></script>   
}

@section head
{
    @Styles.Render("~/Content/themes/base/css");
}

